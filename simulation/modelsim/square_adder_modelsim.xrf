vendor_name = ModelSim
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/STATE_MACHINE/registry_3bits.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/STATE_MACHINE/asm_rom.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/STATE_MACHINE/asm.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/REGISTRY/registry_8bits.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/REGISTRY/FFD.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/ADDER/half_adder.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/ADDER/full_adder.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/ADDER/adder_8bits.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/DECODERS/int7seg.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/DECODERS/decoderHex.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/DECODERS/bin2dec.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/square_adder.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/rom_squares.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/MUX2x8.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/TLAB3_tb_new.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/MUX2x1.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Isel/1Semestre/LSD/AV/AV_LAB3/SEM1.LSD.LAB3.SQUARE-ADDER/db/square_adder.cbx.xml
design_name = hard_block
design_name = square_adder
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, square_adder, 1
instance = comp, \Cy~output\, Cy~output, square_adder, 1
instance = comp, \sum[0]~output\, sum[0]~output, square_adder, 1
instance = comp, \sum[1]~output\, sum[1]~output, square_adder, 1
instance = comp, \sum[2]~output\, sum[2]~output, square_adder, 1
instance = comp, \sum[3]~output\, sum[3]~output, square_adder, 1
instance = comp, \sum[4]~output\, sum[4]~output, square_adder, 1
instance = comp, \sum[5]~output\, sum[5]~output, square_adder, 1
instance = comp, \sum[6]~output\, sum[6]~output, square_adder, 1
instance = comp, \sum[7]~output\, sum[7]~output, square_adder, 1
instance = comp, \HEX0[0]~output\, HEX0[0]~output, square_adder, 1
instance = comp, \HEX0[1]~output\, HEX0[1]~output, square_adder, 1
instance = comp, \HEX0[2]~output\, HEX0[2]~output, square_adder, 1
instance = comp, \HEX0[3]~output\, HEX0[3]~output, square_adder, 1
instance = comp, \HEX0[4]~output\, HEX0[4]~output, square_adder, 1
instance = comp, \HEX0[5]~output\, HEX0[5]~output, square_adder, 1
instance = comp, \HEX0[6]~output\, HEX0[6]~output, square_adder, 1
instance = comp, \HEX0[7]~output\, HEX0[7]~output, square_adder, 1
instance = comp, \HEX1[0]~output\, HEX1[0]~output, square_adder, 1
instance = comp, \HEX1[1]~output\, HEX1[1]~output, square_adder, 1
instance = comp, \HEX1[2]~output\, HEX1[2]~output, square_adder, 1
instance = comp, \HEX1[3]~output\, HEX1[3]~output, square_adder, 1
instance = comp, \HEX1[4]~output\, HEX1[4]~output, square_adder, 1
instance = comp, \HEX1[5]~output\, HEX1[5]~output, square_adder, 1
instance = comp, \HEX1[6]~output\, HEX1[6]~output, square_adder, 1
instance = comp, \HEX1[7]~output\, HEX1[7]~output, square_adder, 1
instance = comp, \HEX2[0]~output\, HEX2[0]~output, square_adder, 1
instance = comp, \HEX2[1]~output\, HEX2[1]~output, square_adder, 1
instance = comp, \HEX2[2]~output\, HEX2[2]~output, square_adder, 1
instance = comp, \HEX2[3]~output\, HEX2[3]~output, square_adder, 1
instance = comp, \HEX2[4]~output\, HEX2[4]~output, square_adder, 1
instance = comp, \HEX2[5]~output\, HEX2[5]~output, square_adder, 1
instance = comp, \HEX2[6]~output\, HEX2[6]~output, square_adder, 1
instance = comp, \HEX2[7]~output\, HEX2[7]~output, square_adder, 1
instance = comp, \MCLK~input\, MCLK~input, square_adder, 1
instance = comp, \MCLK~inputclkctrl\, MCLK~inputclkctrl, square_adder, 1
instance = comp, \X[3]~input\, X[3]~input, square_adder, 1
instance = comp, \X[2]~input\, X[2]~input, square_adder, 1
instance = comp, \X[0]~input\, X[0]~input, square_adder, 1
instance = comp, \X[1]~input\, X[1]~input, square_adder, 1
instance = comp, \inst_rom_squares|data[5]~3\, inst_rom_squares|data[5]~3, square_adder, 1
instance = comp, \inst_rom_squares|data[4]~2\, inst_rom_squares|data[4]~2, square_adder, 1
instance = comp, \inst_rom_squares|data[3]~1\, inst_rom_squares|data[3]~1, square_adder, 1
instance = comp, \Start~input\, Start~input, square_adder, 1
instance = comp, \Step~input\, Step~input, square_adder, 1
instance = comp, \inst_asm|ROM|data[5]~2\, inst_asm|ROM|data[5]~2, square_adder, 1
instance = comp, \Rst~input\, Rst~input, square_adder, 1
instance = comp, \inst_asm|Flip_Flop_Q2|Q\, inst_asm|Flip_Flop_Q2|Q, square_adder, 1
instance = comp, \inst_asm|ROM|data[4]~3\, inst_asm|ROM|data[4]~3, square_adder, 1
instance = comp, \inst_asm|Flip_Flop_Q1|Q\, inst_asm|Flip_Flop_Q1|Q, square_adder, 1
instance = comp, \inst_asm|ROM|data[3]~4\, inst_asm|ROM|data[3]~4, square_adder, 1
instance = comp, \inst_asm|ROM|data[3]~5\, inst_asm|ROM|data[3]~5, square_adder, 1
instance = comp, \inst_asm|Flip_Flop_Q0|Q\, inst_asm|Flip_Flop_Q0|Q, square_adder, 1
instance = comp, \inst_asm|ROM|data[1]~1\, inst_asm|ROM|data[1]~1, square_adder, 1
instance = comp, \inst_registry_8bits|FFD1|Q~0\, inst_registry_8bits|FFD1|Q~0, square_adder, 1
instance = comp, \inst_asm|ROM|data[2]~0\, inst_asm|ROM|data[2]~0, square_adder, 1
instance = comp, \inst_registry_8bits|FFD1|Q\, inst_registry_8bits|FFD1|Q, square_adder, 1
instance = comp, \inst_registry_8bits|FFD2|Q~2\, inst_registry_8bits|FFD2|Q~2, square_adder, 1
instance = comp, \inst_registry_8bits|FFD2|Q\, inst_registry_8bits|FFD2|Q, square_adder, 1
instance = comp, \inst_rom_squares|data[2]~0\, inst_rom_squares|data[2]~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_1|instance_half_adder_1|carry_out~0\, inst_adder_8bits|instance_full_adder_1|instance_half_adder_1|carry_out~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_3|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_3|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD3|Q\, inst_registry_8bits|FFD3|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_3|carry_out~0\, inst_adder_8bits|instance_full_adder_3|carry_out~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_4|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_4|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD4|Q\, inst_registry_8bits|FFD4|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_4|carry_out~0\, inst_adder_8bits|instance_full_adder_4|carry_out~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_5|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_5|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD5|Q\, inst_registry_8bits|FFD5|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_5|carry_out~0\, inst_adder_8bits|instance_full_adder_5|carry_out~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_6|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_6|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD6|Q\, inst_registry_8bits|FFD6|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_6|carry_out~0\, inst_adder_8bits|instance_full_adder_6|carry_out~0, square_adder, 1
instance = comp, \inst_rom_squares|data[6]~4\, inst_rom_squares|data[6]~4, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_6|carry_out~1\, inst_adder_8bits|instance_full_adder_6|carry_out~1, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_6|carry_out~2\, inst_adder_8bits|instance_full_adder_6|carry_out~2, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_7|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_7|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD7|Q\, inst_registry_8bits|FFD7|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_7|carry_out~0\, inst_adder_8bits|instance_full_adder_7|carry_out~0, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_8|instance_half_adder_2|result\, inst_adder_8bits|instance_full_adder_8|instance_half_adder_2|result, square_adder, 1
instance = comp, \inst_registry_8bits|FFD8|Q\, inst_registry_8bits|FFD8|Q, square_adder, 1
instance = comp, \inst_adder_8bits|instance_full_adder_8|carry_out~0\, inst_adder_8bits|instance_full_adder_8|carry_out~0, square_adder, 1
instance = comp, \inst_FFD|Q\, inst_FFD|Q, square_adder, 1
instance = comp, \inst_asm|ROM|Equal30~0\, inst_asm|ROM|Equal30~0, square_adder, 1
instance = comp, \inst_mux_2x8|result[0]~0\, inst_mux_2x8|result[0]~0, square_adder, 1
instance = comp, \inst_mux_2x8|result~1\, inst_mux_2x8|result~1, square_adder, 1
instance = comp, \inst_mux_2x8|result[2]~2\, inst_mux_2x8|result[2]~2, square_adder, 1
instance = comp, \inst_mux_2x8|result[3]~3\, inst_mux_2x8|result[3]~3, square_adder, 1
instance = comp, \inst_mux_2x8|result[4]~4\, inst_mux_2x8|result[4]~4, square_adder, 1
instance = comp, \inst_mux_2x8|result[5]~5\, inst_mux_2x8|result[5]~5, square_adder, 1
instance = comp, \inst_mux_2x8|result[6]~6\, inst_mux_2x8|result[6]~6, square_adder, 1
instance = comp, \inst_rom_squares|data[7]~5\, inst_rom_squares|data[7]~5, square_adder, 1
instance = comp, \inst_mux_2x8|result[7]~7\, inst_mux_2x8|result[7]~7, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux11~0\, inst_decoderHex|U3|Mux11~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux9~0\, inst_decoderHex|U3|Mux9~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux10~0\, inst_decoderHex|U3|Mux10~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux22~0\, inst_decoderHex|U3|Mux22~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux21~0\, inst_decoderHex|U3|Mux21~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux20~0\, inst_decoderHex|U3|Mux20~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux32~0\, inst_decoderHex|U3|Mux32~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux31~0\, inst_decoderHex|U3|Mux31~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux33~0\, inst_decoderHex|U3|Mux33~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux42~0\, inst_decoderHex|U3|Mux42~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux44~0\, inst_decoderHex|U3|Mux44~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux43~0\, inst_decoderHex|U3|Mux43~0, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[0]~0\, inst_decoderHex|U0|dOut[0]~0, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[1]~1\, inst_decoderHex|U0|dOut[1]~1, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[2]~2\, inst_decoderHex|U0|dOut[2]~2, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[3]~3\, inst_decoderHex|U0|dOut[3]~3, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[4]~4\, inst_decoderHex|U0|dOut[4]~4, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[5]~5\, inst_decoderHex|U0|dOut[5]~5, square_adder, 1
instance = comp, \inst_decoderHex|U0|dOut[6]~6\, inst_decoderHex|U0|dOut[6]~6, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux19~0\, inst_decoderHex|U3|Mux19~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux0~0\, inst_decoderHex|U3|Mux0~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux30~0\, inst_decoderHex|U3|Mux30~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux8~0\, inst_decoderHex|U3|Mux8~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux48~0\, inst_decoderHex|U3|Mux48~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux47~0\, inst_decoderHex|U3|Mux47~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux41~0\, inst_decoderHex|U3|Mux41~0, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux46~0\, inst_decoderHex|U3|Mux46~0, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[0]~0\, inst_decoderHex|U1|dOut[0]~0, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[1]~1\, inst_decoderHex|U1|dOut[1]~1, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[2]~2\, inst_decoderHex|U1|dOut[2]~2, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[3]~3\, inst_decoderHex|U1|dOut[3]~3, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[4]~4\, inst_decoderHex|U1|dOut[4]~4, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[5]~5\, inst_decoderHex|U1|dOut[5]~5, square_adder, 1
instance = comp, \inst_decoderHex|U1|dOut[6]~6\, inst_decoderHex|U1|dOut[6]~6, square_adder, 1
instance = comp, \inst_decoderHex|U2|Equal12~4\, inst_decoderHex|U2|Equal12~4, square_adder, 1
instance = comp, \inst_decoderHex|U2|dOut[2]~12\, inst_decoderHex|U2|dOut[2]~12, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux45~0\, inst_decoderHex|U3|Mux45~0, square_adder, 1
instance = comp, \inst_decoderHex|U2|dOut[5]~13\, inst_decoderHex|U2|dOut[5]~13, square_adder, 1
instance = comp, \inst_decoderHex|U3|Mux34~0\, inst_decoderHex|U3|Mux34~0, square_adder, 1
instance = comp, \~QUARTUS_CREATED_UNVM~\, ~QUARTUS_CREATED_UNVM~, square_adder, 1
instance = comp, \~QUARTUS_CREATED_ADC1~\, ~QUARTUS_CREATED_ADC1~, square_adder, 1
instance = comp, \~QUARTUS_CREATED_ADC2~\, ~QUARTUS_CREATED_ADC2~, square_adder, 1
